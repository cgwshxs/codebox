(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(cua-mode t nil (cua-base))
 '(gdb-delete-out-of-scope t)
 '(gdb-many-windows t)
 '(gdb-use-separate-io-buffer t)
 '(inhibit-startup-screen t)
 '(scroll-bar-mode (quote right))
 '(show-paren-mode t)
 '(speedbar-use-images nil))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 )
;;auto-complete
(add-to-list 'load-path "/home/wjlei/auto-complete-1.3.1")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "/home/wjlei/auto-complete-1.3.1/ac-dict")
(ac-config-default)


;; Load CEDET.
;; See cedet/common/cedet.info for configuration details.
(load-file "/home/wjlei/cedet-1.0pre7/common/cedet.el")

(load-file "/home/wjlei/cscope-15.8a/contrib/xcscope/xcscope.el")
(require 'xcscope)


;; Enable EDE (Project Management) features
(global-ede-mode 1)

;; Enable EDE for a pre-existing C++ project
;; (ede-cpp-root-project "NAME" :file "~/myproject/Makefile")


;; Enabling Semantic (code-parsing, smart completion) features
;; Select one of the following:

;; * This enables the database and idle reparse engines
(semantic-load-enable-minimum-features)

;; * This enables some tools useful for coding, such as summary mode
;;   imenu support, and the semantic navigator
(semantic-load-enable-code-helpers)
(defun ac-complete-semantic-self-insert (arg)
    (interactive "p")
    (self-insert-command arg)
    (ac-complete-semantic))
(defun my-c-mode-cedet-hook ()
 (local-set-key "." 'ac-complete-semantic-self-insert)
 (local-set-key ">" 'ac-complete-semantic-self-insert))
(add-hook 'c-mode-common-hook 'my-c-mode-cedet-hook)
(add-hook 'c++-mode-common-hook 'my-c-mode-cedet-hook)
(global-set-key [(control tab)] 'semantic-ia-complete-symbol-menu)

;; * This enables even more coding tools such as intellisense mode
;;   decoration mode, and stickyfunc mode (plus regular code helpers)
;; (semantic-load-enable-gaudy-code-helpers)

;; * This enables the use of Exuberent ctags if you have it installed.
;;   If you use C++ templates or boost, you should NOT enable it.
;; (semantic-load-enable-all-exuberent-ctags-support)
;;   Or, use one of these two types of support.
;;   Add support for new languges only via ctags.
;; (semantic-load-enable-primary-exuberent-ctags-support)
;;   Add support for using ctags as a backup parser.
;; (semantic-load-enable-secondary-exuberent-ctags-support)
(require 'semantic-tag-folding nil 'noerror)
(global-semantic-tag-folding-mode 1) 

;; Enable SRecode (Template management) minor-mode.
;; (global-srecode-minor-mode 1)

;;-----------------------------------------mouse roll-------------------
;; the following function is to scroll the text one line down while keeping the cursor
(defun scroll-down-keep-cursor ()
(interactive)
   (scroll-down 2))

;; the following function is to scroll the text one line up while keeping the cursor
(defun scroll-up-keep-cursor ()
(interactive)
   (scroll-up 2))

;; binding mouse-4 and mouse-5 to the above two functions
(global-set-key [mouse-4] 'scroll-down-keep-cursor)
(global-set-key [mouse-5] 'scroll-up-keep-cursor)
;;--------------------------------------------------------------------------------------
;;================================快捷键设置=======================================
;; 以 y/n代表 yes/no
(fset 'yes-or-no-p 'y-or-n-p) 
(global-set-key (kbd "C-s") 'save-buffer)
(global-set-key (kbd "C-f") 'search-forward)
;;全选
(global-set-key (kbd "C-a") 'mark-whole-buffer)
 ;;复制
(global-set-key (kbd "C-c") 'kill-ring-save)
 ;;粘贴
(global-set-key (kbd "C-v") 'yank)
 ;;剪切
;;(global-set-key (kbd "C-x") 'kill-region)
;;撤销
(global-set-key (kbd "C-z") 'undo)
;;------------------------------------------------
;;编译
(defun quick-compile-debug ()
"A quick compile funciton for C++"
(interactive)
(save-buffer)
(compile (concat "g++ " (buffer-name (current-buffer)) " -g -pg"))
(gdb (concat "gdb" "  --annotate=3 a.out"))
(gdb("quit"))
 
)

;;快捷键F5
(global-set-key [(f5)] 'quick-compile-debug )

(defun quick-compile ()
"A quick compile funciton for C++"
(interactive)
(save-buffer)
(compile (concat "g++ " (buffer-name (current-buffer)) " -g -pg"))

 
)
(global-set-key [(f6)] 'quick-compile )

;;光标显示为一竖线
(setq-default cursor-type 'bar)
;;滚动条置右
(customize-set-variable 'scroll-bar-mode 'right)
;;鼠标显示变量信息
(gud-tooltip-mode 1)

;;格式化整个文件函数
(defun indent-whole ()
  (interactive)
  (indent-region (point-min) (point-max))
  (message "format successfully"))
;;绑定到F7键
(global-set-key [f7] 'indent-whole)
;;支持 emacs 和外部程序的粘贴  
(setq x-select-enable-clipboard t)

(defun gud-kill ()
  "Kill gdb process."
  (interactive)
  (with-current-buffer gud-comint-buffer (comint-skip-input))
  (kill-process (get-buffer-process gud-comint-buffer)))
(global-set-key [(f4)] 'gud-kill)
;;vc
(require 'gdb-ui)
(defun gdb-or-gud-go ()
  "If gdb isn't running; run gdb, else call gud-go."
  (interactive)
  (if (and gud-comint-buffer
           (buffer-name gud-comint-buffer)
           (get-buffer-process gud-comint-buffer)
           (with-current-buffer gud-comint-buffer (eq gud-minor-mode 'gdba)))
      (gud-call (if gdb-active-process "continue" "run") "")
    (gdb (gud-query-cmdline 'gdb))))
(defun gud-break-remove ()
  "Set/clear breakpoin."
  (interactive)
  (save-excursion
    (if (eq (car (fringe-bitmaps-at-pos (point))) 'breakpoint)
        (gud-remove nil)
      (gud-break nil))))
(defun gud-kill ()
  "Kill gdb process."
  (interactive)
  (with-current-buffer gud-comint-buffer (comint-skip-input))
  (kill-process (get-buffer-process gud-comint-buffer)))
;;(setq gdb-many-windows t)
;;(global-set-key [f5] 'gdb-or-gud-go)
;; (global-set-key [S-f5] '(lambda () (interactive) (gud-call "quit" nil)))
;;(global-set-key [S-f5] 'gud-kill)
;;(global-set-key [f7] '(lambda () (interactive) (compile compile-command)))
;;(global-set-key [f8] 'gud-print)
;;(global-set-key [C-f8] 'gud-pstar)
(global-set-key [f9] 'gud-break-remove)
;; (global-set-key [f9] 'gud-break)
;; (global-set-key [C-f9] 'gud-remove)
(global-set-key [f10] 'gud-next)
;;(global-set-key [C-f10] 'gud-until)
;;(global-set-key [S-f10] 'gud-jump)
(global-set-key [f11] 'gud-step)
;;(global-set-key [C-f11] 'gud-finish)
